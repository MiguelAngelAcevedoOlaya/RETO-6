# -*- coding: utf-8 -*-
"""reto#6.7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s5jGEUY5gEI9IaxgxavkF4Sn9VmnI5U4
"""

aux_n : float # Se  define la constante, que sera la ayuda para ordenar los numeros

def numeros(numero_1:float, numero_2:float, numero_3:float, numero_4:float, numero_5: float) -> float:
  promedio = ((numero_1 + numero_2 + numero_3 + numero_4 + numero_5)/5)
  return promedio  #se definio la variable para calcular el promedio

def mediana_(numero_1:float, numero_2:float, numero_3:float, numero_4: float, numero_5: float) -> float:


    if numero_1 < numero_2:
      aux_n = numero_2
      numero_2 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_4:
      aux_n = numero_4
      numero_4 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_5:
      aux_n = numero_5
      numero_5 = numero_1
      numero_1 = aux_n

    if numero_2 < numero_3:
      aux_n = numero_3
      numero_3 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_5:
      aux_n = numero_5
      numero_5 = numero_2
      numero_2 = aux_n

    if numero_3 < numero_4:
      aux_n = numero_4
      numero_4 = numero_3
      numero_3 = aux_n

    if numero_3 < numero_5:
      aux_n = numero_5
      numero_5 = numero_3
      numero_3 = aux_n

    if numero_4 < numero_5:
      aux_n = numero_5
      numero_5 = numero_4
      numero_4 = aux_n

    return str(numero_3)
    #Se definio una variable que imprime la mediana de los datos

def numeros_(numero_1:float, numero_2:float, numero_3:float, numero_4:float, numero_5: float) -> float:
    promedio_multiplicativo = ((numero_1*numero_2*numero_3*numero_4*numero_5)**0.2)
    return promedio_multiplicativo #se definio la variable para calcular el promedio multiplicativo

def ordas_(numero_1:float, numero_2:float, numero_3:float, numero_4: float, numero_5: float) -> float:

    if numero_1 > numero_2:
      aux_n = numero_2
      numero_2 = numero_1
      numero_1 = aux_n

    if numero_1 > numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 > numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 > numero_4:
      aux_n = numero_4
      numero_4 = numero_1
      numero_1 = aux_n

    if numero_1 > numero_5:
      aux_n = numero_5
      numero_5 = numero_1
      numero_1 = aux_n

    if numero_2 > numero_3:
      aux_n = numero_3
      numero_3 = numero_2
      numero_2 = aux_n

    if numero_2 > numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 > numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 > numero_5:
      aux_n = numero_5
      numero_5 = numero_2
      numero_2 = aux_n

    if numero_3 > numero_4:
      aux_n = numero_4
      numero_4 = numero_3
      numero_3 = aux_n

    if numero_3 > numero_5:
      aux_n = numero_5
      numero_5 = numero_3
      numero_3 = aux_n

    if numero_4 > numero_5:
      aux_n = numero_5
      numero_5 = numero_4
      numero_4 = aux_n

    return str(numero_1)+' '+str(numero_2)+' '+str(numero_3)+' '+str(numero_4)+' '+str(numero_5)
    #Se definio una variable que imprime el orden ascendente de los datos

def ordes_(numero_1:float, numero_2:float, numero_3:float, numero_4: float, numero_5: float) -> float:

    if numero_1 < numero_2:
      aux_n = numero_2
      numero_2 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_4:
      aux_n = numero_4
      numero_4 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_5:
      aux_n = numero_5
      numero_5 = numero_1
      numero_1 = aux_n

    if numero_2 < numero_3:
      aux_n = numero_3
      numero_3 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_5:
      aux_n = numero_5
      numero_5 = numero_2
      numero_2 = aux_n

    if numero_3 < numero_4:
      aux_n = numero_4
      numero_4 = numero_3
      numero_3 = aux_n

    if numero_3 < numero_5:
      aux_n = numero_5
      numero_5 = numero_3
      numero_3 = aux_n

    if numero_4 < numero_5:
      aux_n = numero_5
      numero_5 = numero_4
      numero_4 = aux_n

    return str(numero_1)+' '+str(numero_2)+' '+str(numero_3)+' '+str(numero_4)+' '+str(numero_5)
    #Se definio una variable que imprime el orden descendente de los datos

def may_elev_men(numero_1:float, numero_2:float, numero_3:float, numero_4: float, numero_5: float) -> float: #Tomamos el codigo de ordenar números y eleveamos el numero_1 (mayor) con el numero_5 (menor)

    if numero_1 < numero_2:
      aux_n = numero_2
      numero_2 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_4:
      aux_n = numero_4
      numero_4 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_5:
      aux_n = numero_5
      numero_5 = numero_1
      numero_1 = aux_n

    if numero_2 < numero_3:
      aux_n = numero_3
      numero_3 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_5:
      aux_n = numero_5
      numero_5 = numero_2
      numero_2 = aux_n

    if numero_3 < numero_4:
      aux_n = numero_4
      numero_4 = numero_3
      numero_3 = aux_n

    if numero_3 < numero_5:
      aux_n = numero_5
      numero_5 = numero_3
      numero_3 = aux_n

    if numero_4 < numero_5:
      aux_n = numero_5
      numero_5 = numero_4
      numero_4 = aux_n

    potencia_ = numero_1**numero_5

    return potencia_
    #Se definio una variable que imprime el mayor número elevado al menor número

def raiz_m(numero_1:float, numero_2:float, numero_3:float, numero_4: float, numero_5: float) -> float: #Tomamos el codigo de ordenar números y le sacamos la raiz cubica

    if numero_1 < numero_2:
      aux_n = numero_2
      numero_2 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_3:
      aux_n = numero_3
      numero_3 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_4:
      aux_n = numero_4
      numero_4 = numero_1
      numero_1 = aux_n

    if numero_1 < numero_5:
      aux_n = numero_5
      numero_5 = numero_1
      numero_1 = aux_n

    if numero_2 < numero_3:
      aux_n = numero_3
      numero_3 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_4:
      aux_n = numero_4
      numero_4 = numero_2
      numero_2 = aux_n

    if numero_2 < numero_5:
      aux_n = numero_5
      numero_5 = numero_2
      numero_2 = aux_n

    if numero_3 < numero_4:
      aux_n = numero_4
      numero_4 = numero_3
      numero_3 = aux_n

    if numero_3 < numero_5:
      aux_n = numero_5
      numero_5 = numero_3
      numero_3 = aux_n

    if numero_4 < numero_5:
      aux_n = numero_5
      numero_5 = numero_4
      numero_4 = aux_n

    raiz_ = numero_5**(1/3)

    return raiz_
    #Se definio una variable que imprime la raiz cubica del menor número

if __name__ == "__main__":
  numero_1 = float(input("Ingresa el número 1:"))
  numero_2 = float(input("Ingresa el número 2:"))
  numero_3 = float(input("Ingresa el número 3:"))
  numero_4 = float(input("Ingresa el número 4:"))
  numero_5 = float(input("Ingresa el número 5:"))
  prom = numeros(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("El promedio de los 5 numeros es " +str(prom))
  mediana = mediana_(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("La mediana es  " +str(mediana))
  prom_mult = numeros_(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("El promedio multiplicativo de los 5 números es " +str(prom_mult))
  orden_ascendente = ordas_(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("El orden ascendete de los números es "+str(orden_ascendente))
  orden_descendente = ordes_(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("El orden descendete de los números es "+str(orden_descendente))
  potencia = may_elev_men(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("La potencia del mayor número elevado al menor es "+str(potencia))
  raiz = raiz_m(numero_1, numero_2, numero_3, numero_4, numero_5)
  print("La raiz cúbica del menor número es "+str(raiz))
  #codigo if que determina el promedio de los números, la mediana, promedio multiplicatico, orden de los numeros de forma ascendete y descendente, el mayor número elevado al menor número, y la raiz cubica del menor número